"use strict"; var HKStock = function () { var e, t, o, n, s, c = this, i = null, r = []; this.init = function (c, i, a) { chrome.storage.sync.get("injectedTabs", function (e) { t = e.injectedTabs ? e.injectedTabs : [] }), chrome.storage.sync.get("settingRedGreen", function (e) { o = e.settingRedGreen ? e.settingRedGreen : ["red", "green"] }), chrome.storage.local.get("stocksList", function (e) { r = e.stocksList ? e.stocksList : [], chrome.storage.sync.get("stockUpdateTime", function (e) { s = e.stockUpdateTime ? e.stockUpdateTime : Date.now() / 1e3, Date.now() / 1e3 - s > 43200 && (r = []), c(r) }) }), chrome.storage.sync.get("maxUpdateCounter", function (e) { n = e.maxUpdateCounter ? e.maxUpdateCounter : 10, i(n) }), chrome.storage.sync.get("choosedStocks", function (t) { for (var o in -1 != (e = t.choosedStocks ? unique(t.choosedStocks) : []).indexOf("^HSI") && e.splice(e.indexOf("^HSI"), 1), -1 != e.indexOf("^HSCE") && e.splice(e.indexOf("^HSCE"), 1), e) e[o] = e[o].replace(".HK", "").replace(/\s+/g, ""); chrome.storage.sync.set({ choosedStocks: e }), a(e) }) }, this.popNewWindow = function (e, t) { chrome.windows.create({ url: chrome.extension.getURL("popup.html#top"), type: "panel", focused: !0, width: e, height: t }) }, this.injectToTab = function () { chrome.tabs.getSelected(null, function (e) { i = e.id, t.push(i), t = unique(t), chrome.storage.sync.set({ injectedTabs: t }, function () { chrome.tabs.sendMessage(i, { method: "inject", tab: i }), c.closePopup() }) }) }, this.switchColor = function (e) { o.reverse(), chrome.storage.sync.set({ settingRedGreen: o }, function () { e(o) }) }, this.getCurrentColorSetting = function () { return o }, this.setMaxUpdateCounter = function (e) { n = e, chrome.storage.sync.set({ maxUpdateCounter: n }) }, this.updateStockList = function (e) { r = e, chrome.storage.local.set({ stocksList: r }), chrome.storage.sync.set({ stockUpdateTime: Date.now() / 1e3 }) }, this.findStock = function (e) { return r.filter(function (t) { return -1 != t.indexOf(e) }) }, this.chooseStock = function (t, o, n) { -1 == e.indexOf(t) ? (e.push(t), chrome.storage.sync.set({ choosedStocks: e }, function () { o() })) : n() }, this.getChoosedStock = function () { return e }, this.changeChoosedStockOrder = function (t) { e = t, chrome.storage.sync.set({ choosedStocks: e }) }, this.removeStock = function (t) { e.splice(e.indexOf(t), 1), chrome.storage.sync.set({ choosedStocks: e }) }, this.closePopup = function () { window.close() }, this.reloadPopup = function () { window.location.reload(!0) } };